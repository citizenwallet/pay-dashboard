'use client';
import { useState } from 'react';
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle
} from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue
} from '@/components/ui/select';
import { Button } from '@/components/ui/button';
import { Place } from '@/db/places';
import { createPosAction } from './action';
import { toast } from 'sonner';
import { useRouter } from 'next/navigation';

export default function PosPage({
  posId,
  places
}: {
  posId: string;
  places: Place[] | null;
}) {
  const [name, setName] = useState('');
  const [selectedPlace, setSelectedPlace] = useState<string>(
    places?.[0]?.id.toString() ?? ''
  );
  const router = useRouter();

  const submitForm = async () => {
    try {
      const res = await createPosAction(Number(selectedPlace), name, posId);
      toast.success('Successfully Active Point of Sales App');
      router.push(
        `/business/${places?.[0]?.business_id}/places/${selectedPlace}/pos`
      );
    } catch (error) {
      console.error('Failed to update place display:', error);
      toast.error('Failed to Active Point of Sales App');
    }
  };

  return (
    <div className="flex min-h-screen items-center justify-center p-4">
      <Card className="mx-auto w-full max-w-sm">
        <CardHeader>
          <CardTitle>Activate Your Point of Sales App</CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="space-y-2">
            <Label htmlFor="place">Assign to a place</Label>
            <Select
              defaultValue={places?.[0]?.id.toString() ?? ''}
              onValueChange={setSelectedPlace}
            >
              <SelectTrigger id="place">
                <SelectValue placeholder="Select a place" />
              </SelectTrigger>
              <SelectContent>
                {places &&
                  places?.map((place) => (
                    <SelectItem key={place.id} value={place.id.toString()}>
                      {place.name}
                    </SelectItem>
                  ))}
              </SelectContent>
            </Select>
            <p className="text-sm text-muted-foreground">
              This will assign all orders generated by your app to this place.
            </p>
          </div>

          <div className="space-y-2">
            <Label htmlFor="name">Name</Label>
            <Input
              id="name"
              placeholder="Enter name"
              value={name}
              onChange={(e) => setName(e.target.value)}
            />
          </div>
        </CardContent>
        <CardFooter>
          <Button
            className="w-full"
            disabled={!name.trim()}
            onClick={submitForm}
          >
            Activate POS
          </Button>
        </CardFooter>
      </Card>
    </div>
  );
}
